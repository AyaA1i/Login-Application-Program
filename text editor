#include <iostream>
#include <cstring>
#include <fstream>
#include<regex>


using namespace std;
bool saved = false ;
string FileName;
fstream file;

void Input_FileName();

bool exit_or_save();


void Add();

void Display();

void Empty();

void encrypt();

void decrypt();

void merge();

void count_num_of_words();

void count_num_of_characters();

void count_num_of_lines();

void search_for_word();

void count_num_of_times_word_exist();

void upper_case();

void lower_case();

void first_caps();

void save();



int main() {
    cout << "Ahlan ya user ya habibi \uF04A\n";
    Input_FileName();
    while (true) {
        cout << "Please select an option to apply or 16 to exit:\n"
                "1. Add new text to the end of the file\n";
        "2. Display the content of the file\n";
        "3. Empty the file\n";
        "4. Encrypt the file content\n";
        "5. Decrypt the file content\n";
        "6. Merge another file\n";
        "7. Count the number of words in the file.\n";
        "8. Count the number of characters in the file\n";
        "9. Count the number of lines in the file\n";
        "10. Search for a word in the file\n";
        "11. Count the number of times a word exists in the file\n";
        "12. Turn the file content to upper case.\n";
        "13. Turn the file content to lower case.\n";
        "14. Turn file content to 1st caps (1st char of each word is capital)\n";
        "15. Save\n";
        "16. Exit\n";

        string option;
        cin >> option;
        regex validOption("[0-9]|1[0-6]");
        while (!regex_match(option, validOption)) {
            cout << "Please enter an option from the previous list\n>>";
            cin >> option;
        }


        if (option == "1")
            Add();
        else if (option == "2")
            Display();
        else if (option == "3")
            Empty();
        else if (option == "4")
            encrypt();
        else if (option == "5")
            decrypt();
        else if (option == "6")
            merge();
        else if (option == "7")
            count_num_of_words();
        else if (option == "8")
            count_num_of_characters();
        else if (option == "9")
            count_num_of_lines();
        else if (option == "10")
            search_for_word();
        else if (option == "11")
            count_num_of_times_word_exist();
        else if (option == "12")
            upper_case();
        else if (option == "13") {
            lower_case();
        } else if (option == "14") {
            first_caps();
        } else if (option == "15") {
            save();
        } else if (option == "16") {
            if (exit_or_save())
                return 0;
        }
        cout << "\n_______________________________________________________________\n";
    }
}

//_________________________________________
void Input_FileName(){
    cout<<"Enter the file name :\n";
    cin.ignore();
    getline(cin>>ws,FileName,'\n');
    FileName += ".txt";
    file.open(FileName);
    if (file.fail()) {
        cout << "The file can't be opened\n" << endl;
        file.open(FileName,ios::out);
        cout<<"This is a new file. I created it for you ^_^\n";
    }
}

bool exit_or_save(){
    if (!saved) {
        cout<< "Are you sure you want to exit without saving?\nPress 0 to exit\nPress 1 to save and exit\nPress 2 to return back>>";
        char choice;
        cin >> choice;
        while (choice != '0' && choice != '1' && choice != '2') {
            cout << "Please enter a valid choice\n>>";
            cin >> choice;
        }
        if (choice == '2')
            return false;
        else if (choice == '1') {
            save();
            return true;
        }
    }
    return true;
}

void merge(){
    fstream myFile2;
    string FN2, line, string1;
    cout << "Please enter the file name you want to copy its content to be merged with another file:";
    cin.ignore();
    getline(cin,FN2,'\n');
    FN2 += ".txt";
    FN2.c_str();
    myFile2.open(FN2);
    if (myFile2.fail()) {
        myFile2.open(FN2,ios::out);
        cout << "This is a new file. I created it for you ^_^\n";
    }
    else{
        cout << "The file is already exists :)\n";
    }
    while(getline(myFile2, line)){
        string1 += line;
        string1 += '\n';
    }
    fstream myFile;
    string FN;
    cout << "Please enter the file name you want to apply merge process:";
    getline(cin,FN,'\n');
    FN += ".txt";
    FN.c_str();
    myFile.open(FN);
    if (myFile.fail()) {
        myFile.open(FN,ios::app);
        cout << "This is a new file. I created it for you ^_^\n";
    }
    else{
        cout << "The file is already exists :)\n";
    }
    myFile << string1;
}

void count_num_of_lines(){
    Input_FileName();
    string line;
    int sum = 0;
    while(getline(file, line)){
        sum += 1;
    }
    cout << "\nSum of lines in the specified file is " << sum;
}

void count_num_of_words(){
    Input_FileName();
    string string1, line;
    int sum=0;
    while(getline(file, line)){
        string1 += line;
        string1 += ' ';
    }
    for(int i = 0; i < string1.length(); ++i){
        if(string1[i] == ' ' && string1[i-1] != ' '){
            sum++;
        }
    }
    cout << "\nSum of words in the specified file is " << sum;
}

void count_num_of_characters(){
    Input_FileName();
    string string1, line;
    while(getline(file, line)){
        string1 += line;
    }
    cout << "\nSum of characters in the specified file is " << string1.length();
}

void search_for_word(){
    string FN, line, word, string1;
    Input_FileName();
    int counter = 0;
    cout << "Please enter the word to search for it: ";
    cin >> word;
    while(getline(file, line)){
        string1 += line;
        string1 += ' ';
    }
    transform(word.begin(), word.end(), word.begin(), ::tolower);
    transform(string1.begin(), string1.end(), string1.begin(), ::tolower);
    for(int i = 0;i < string1.length(); i++) {
        if (word[0] == string1[i] && string1[i - 1] == ' ') {
            for (int j = 0; j < word.length(); j++) {
                if (word[j] == string1[i + j]) {
                    counter++;
                }
            }
            if (counter == word.length()) {
                cout << "Word was found in the file :)";
                break;
            }
        }
        counter = 0;
    }
    if(counter != word.length()){
        cout << "Word was not found in the file :(";
    }
}

void Add(){
    Input_FileName();
    string add;
    file.open(FileName,ios::app);
    cout<<"Enter the text you want to add :\nEnter Ctrl+Z when you finish\n";
    getline(cin>>ws,add,'\0');
    file<<add<<endl;


}

void display(){
    Input_FileName();
    string line;
    file.open(FileName.c_str(),ios::in);
    while (file) {
        while(!file.eof()){
            getline(file, line);
            cout << line << endl;
        }
    }
}

void clear(){
    Input_FileName();
    file.open(FileName,ios::out);

}

void encrypt() {
    Input_FileName();
    string line;
    file.open(FileName.c_str(), ios::in);
    string All_File;
    while (!file.eof()) {
        getline(file, line);
        All_File += line;
        All_File += '\n';
    }
    file.close();
    file.open(FileName.c_str(), ios::out);
    for (int i = 0; i < All_File.length(); i++) {
        if(All_File[i]=='\n'){
            file<<'\n';
        }
        else{
            file << (char) ((int) All_File[i] + 1);}

    }
    file.close();
}

void decrypt() {
    Input_FileName();
    string line;
    file.open(FileName.c_str(), ios::in);
    string All_File;
    while (!file.eof()) {
        getline(file, line);
        All_File += line;
        All_File += '\n';
    }
    file.close();
    file.open(FileName.c_str(), ios::out);
    for (int i = 0; i < All_File.length(); i++) {
        if(All_File[i]=='\n'){
            file<<'\n';
        }
        else{
            file << (char) ((int) All_File[i] - 1);}
    }
    file.close();
}
void count_num_of_times_word_exist(){

    char name[100], word[30];;
    ifstream file;
    cout<<"the name of file:";
    cin>>name;
    file.open(name,ios::in);
    int coun=0;
    string the_word;
    cout<<"Enter the word you want to know how many times it is in the file: ";
    cin>>the_word;
    while(!file.eof())
    {
        file>>word;
        if(word==the_word)
            coun++;
    }
    cout<<coun;
    file.close();
}
